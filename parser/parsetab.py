
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLARROWrightTILDEleftNOTnonassocLELTEQUALSleftPLUSMINUSleftTIMESDIVIDEleftDOTleftATleftISVOIDAT CASE CLASS COLON COMMA DIVIDE DOT ELSE EQUALS ESAC FALSE FI IDENTIFIER IF IN INHERITS INTEGER ISVOID LARROW LBRACE LE LET LOOP LPAREN LT MINUS NEW NOT OF PLUS POOL RARROW RBRACE RPAREN SEMI STRING THEN TILDE TIMES TRUE TYPE WHILEprogram : classlistclasslist : class SEMIclasslist : class SEMI classlistclass : CLASS type LBRACE featurelist RBRACEclass : CLASS type INHERITS type LBRACE featurelist RBRACEtype : TYPEidentifier : IDENTIFIERformallist : formal COMMA formallistformallist : formalformal : identifier COLON typefeaturelist : featurelist : feature SEMI featurelistfeature : attributeattribute : identifier COLON typeattribute : identifier COLON type LARROW expfeature : identifier LPAREN formallist RPAREN COLON type LBRACE exp RBRACEfeature : identifier LPAREN RPAREN COLON type LBRACE exp RBRACEexplist_semi : exp SEMIexplist_semi : exp SEMI explist_semiexplist_comma : expexplist_comma : exp COMMA explist_commaexp : identifier LARROW expexp : exp DOT identifier LPAREN explist_comma RPARENexp : exp DOT identifier LPAREN RPARENexp : exp AT type DOT identifier LPAREN explist_comma RPARENexp : exp AT type DOT identifier LPAREN RPARENexp : identifier LPAREN explist_comma RPARENexp : identifier LPAREN RPARENexp : IF exp THEN exp ELSE exp FIexp : WHILE exp LOOP exp POOLexp : LBRACE explist_semi RBRACEexp : NEW typeexp : ISVOID expexp : exp PLUS expexp : exp MINUS expexp : exp TIMES expexp : exp DIVIDE expexp : NOT expexp : TILDE expexp : LPAREN exp RPARENexp : identifierexp : INTEGERexp : STRINGexp : TRUEexp : FALSEexp : LET attribute attributelist IN expattributelist : attributelist : COMMA attribute attributelistexp : CASE exp OF elementlist ESACelement : identifier COLON type RARROW expelementlist : element SEMIelementlist : element SEMI elementlistexp : exp LT expexp : exp LE expexp : exp EQUALS exp'
    
_lr_action_items = {'CLASS':([0,5,],[4,4,]),'$end':([1,2,5,8,],[0,-1,-2,-3,]),'SEMI':([3,7,12,13,15,17,27,34,39,40,49,50,51,52,72,73,74,75,76,82,84,88,89,90,91,92,93,94,95,98,104,105,115,117,120,123,124,126,129,135,136,138,139,],[5,-6,18,-13,-7,-4,-14,-5,-41,-15,-42,-43,-44,-45,99,-32,-33,-38,-39,-22,-28,-34,-35,-36,-37,-53,-54,-55,-40,-31,-17,-27,127,-16,-24,-30,-46,-49,-23,-26,-29,-25,-50,]),'TYPE':([4,10,20,29,31,36,45,60,128,],[7,7,7,7,7,7,7,7,7,]),'LBRACE':([6,7,16,33,37,41,42,43,44,46,47,48,54,55,56,57,58,61,62,63,64,65,66,67,80,96,97,99,106,107,112,122,130,137,],[9,-6,21,44,56,44,44,44,44,44,44,44,44,80,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'INHERITS':([6,7,],[10,-6,]),'LARROW':([7,15,27,39,],[-6,-7,33,57,]),'COMMA':([7,15,26,27,35,39,40,49,50,51,52,73,74,75,76,77,82,84,85,88,89,90,91,92,93,94,95,98,105,113,120,123,124,126,129,135,136,138,],[-6,-7,32,-14,-10,-41,-15,-42,-43,-44,-45,-32,-33,-38,-39,101,-22,-28,106,-34,-35,-36,-37,-53,-54,-55,-40,-31,-27,101,-24,-30,-46,-49,-23,-26,-29,-25,]),'IN':([7,15,27,39,40,49,50,51,52,73,74,75,76,77,82,84,88,89,90,91,92,93,94,95,98,100,105,113,120,123,124,125,126,129,135,136,138,],[-6,-7,-14,-41,-15,-42,-43,-44,-45,-32,-33,-38,-39,-47,-22,-28,-34,-35,-36,-37,-53,-54,-55,-40,-31,112,-27,-47,-24,-30,-46,-48,-49,-23,-26,-29,-25,]),'RPAREN':([7,15,19,24,26,35,38,39,49,50,51,52,58,68,73,74,75,76,82,83,84,85,88,89,90,91,92,93,94,95,98,105,107,118,119,120,123,124,126,129,130,134,135,136,138,],[-6,-7,25,30,-9,-10,-8,-41,-42,-43,-44,-45,84,95,-32,-33,-38,-39,-22,105,-28,-20,-34,-35,-36,-37,-53,-54,-55,-40,-31,-27,120,-21,129,-24,-30,-46,-49,-23,135,138,-26,-29,-25,]),'DOT':([7,15,39,40,49,50,51,52,68,69,70,72,73,74,75,76,79,81,82,84,85,87,88,89,90,91,92,93,94,95,98,103,105,109,110,120,123,124,126,129,131,135,136,138,139,],[-6,-7,-41,59,-42,-43,-44,-45,59,59,59,59,-32,-33,59,59,59,59,59,-28,59,108,59,59,59,59,59,59,59,-40,-31,59,-27,59,59,-24,-30,59,-49,-23,59,-26,-29,-25,59,]),'AT':([7,15,39,40,49,50,51,52,68,69,70,72,73,74,75,76,79,81,82,84,85,88,89,90,91,92,93,94,95,98,103,105,109,110,120,123,124,126,129,131,135,136,138,139,],[-6,-7,-41,60,-42,-43,-44,-45,60,60,60,60,-32,-33,60,60,60,60,60,-28,60,60,60,60,60,60,60,60,-40,-31,60,-27,60,60,-24,-30,60,-49,-23,60,-26,-29,-25,60,]),'PLUS':([7,15,39,40,49,50,51,52,68,69,70,72,73,74,75,76,79,81,82,84,85,88,89,90,91,92,93,94,95,98,103,105,109,110,120,123,124,126,129,131,135,136,138,139,],[-6,-7,-41,61,-42,-43,-44,-45,61,61,61,61,-32,-33,61,61,61,61,61,-28,61,-34,-35,-36,-37,61,61,61,-40,-31,61,-27,61,61,-24,-30,61,-49,-23,61,-26,-29,-25,61,]),'MINUS':([7,15,39,40,49,50,51,52,68,69,70,72,73,74,75,76,79,81,82,84,85,88,89,90,91,92,93,94,95,98,103,105,109,110,120,123,124,126,129,131,135,136,138,139,],[-6,-7,-41,62,-42,-43,-44,-45,62,62,62,62,-32,-33,62,62,62,62,62,-28,62,-34,-35,-36,-37,62,62,62,-40,-31,62,-27,62,62,-24,-30,62,-49,-23,62,-26,-29,-25,62,]),'TIMES':([7,15,39,40,49,50,51,52,68,69,70,72,73,74,75,76,79,81,82,84,85,88,89,90,91,92,93,94,95,98,103,105,109,110,120,123,124,126,129,131,135,136,138,139,],[-6,-7,-41,63,-42,-43,-44,-45,63,63,63,63,-32,-33,63,63,63,63,63,-28,63,63,63,-36,-37,63,63,63,-40,-31,63,-27,63,63,-24,-30,63,-49,-23,63,-26,-29,-25,63,]),'DIVIDE':([7,15,39,40,49,50,51,52,68,69,70,72,73,74,75,76,79,81,82,84,85,88,89,90,91,92,93,94,95,98,103,105,109,110,120,123,124,126,129,131,135,136,138,139,],[-6,-7,-41,64,-42,-43,-44,-45,64,64,64,64,-32,-33,64,64,64,64,64,-28,64,64,64,-36,-37,64,64,64,-40,-31,64,-27,64,64,-24,-30,64,-49,-23,64,-26,-29,-25,64,]),'LT':([7,15,39,40,49,50,51,52,68,69,70,72,73,74,75,76,79,81,82,84,85,88,89,90,91,92,93,94,95,98,103,105,109,110,120,123,124,126,129,131,135,136,138,139,],[-6,-7,-41,65,-42,-43,-44,-45,65,65,65,65,-32,-33,65,65,65,65,65,-28,65,-34,-35,-36,-37,None,None,None,-40,-31,65,-27,65,65,-24,-30,65,-49,-23,65,-26,-29,-25,65,]),'LE':([7,15,39,40,49,50,51,52,68,69,70,72,73,74,75,76,79,81,82,84,85,88,89,90,91,92,93,94,95,98,103,105,109,110,120,123,124,126,129,131,135,136,138,139,],[-6,-7,-41,66,-42,-43,-44,-45,66,66,66,66,-32,-33,66,66,66,66,66,-28,66,-34,-35,-36,-37,None,None,None,-40,-31,66,-27,66,66,-24,-30,66,-49,-23,66,-26,-29,-25,66,]),'EQUALS':([7,15,39,40,49,50,51,52,68,69,70,72,73,74,75,76,79,81,82,84,85,88,89,90,91,92,93,94,95,98,103,105,109,110,120,123,124,126,129,131,135,136,138,139,],[-6,-7,-41,67,-42,-43,-44,-45,67,67,67,67,-32,-33,67,67,67,67,67,-28,67,-34,-35,-36,-37,None,None,None,-40,-31,67,-27,67,67,-24,-30,67,-49,-23,67,-26,-29,-25,67,]),'THEN':([7,15,39,49,50,51,52,69,73,74,75,76,82,84,88,89,90,91,92,93,94,95,98,105,120,123,124,126,129,135,136,138,],[-6,-7,-41,-42,-43,-44,-45,96,-32,-33,-38,-39,-22,-28,-34,-35,-36,-37,-53,-54,-55,-40,-31,-27,-24,-30,-46,-49,-23,-26,-29,-25,]),'LOOP':([7,15,39,49,50,51,52,70,73,74,75,76,82,84,88,89,90,91,92,93,94,95,98,105,120,123,124,126,129,135,136,138,],[-6,-7,-41,-42,-43,-44,-45,97,-32,-33,-38,-39,-22,-28,-34,-35,-36,-37,-53,-54,-55,-40,-31,-27,-24,-30,-46,-49,-23,-26,-29,-25,]),'OF':([7,15,39,49,50,51,52,73,74,75,76,79,82,84,88,89,90,91,92,93,94,95,98,105,120,123,124,126,129,135,136,138,],[-6,-7,-41,-42,-43,-44,-45,-32,-33,-38,-39,102,-22,-28,-34,-35,-36,-37,-53,-54,-55,-40,-31,-27,-24,-30,-46,-49,-23,-26,-29,-25,]),'RBRACE':([7,9,11,15,18,21,22,28,39,49,50,51,52,71,73,74,75,76,81,82,84,88,89,90,91,92,93,94,95,98,99,103,105,111,120,123,124,126,129,135,136,138,],[-6,-11,17,-7,-11,-11,-12,34,-41,-42,-43,-44,-45,98,-32,-33,-38,-39,104,-22,-28,-34,-35,-36,-37,-53,-54,-55,-40,-31,-18,117,-27,-19,-24,-30,-46,-49,-23,-26,-29,-25,]),'ELSE':([7,15,39,49,50,51,52,73,74,75,76,82,84,88,89,90,91,92,93,94,95,98,105,109,120,123,124,126,129,135,136,138,],[-6,-7,-41,-42,-43,-44,-45,-32,-33,-38,-39,-22,-28,-34,-35,-36,-37,-53,-54,-55,-40,-31,-27,122,-24,-30,-46,-49,-23,-26,-29,-25,]),'POOL':([7,15,39,49,50,51,52,73,74,75,76,82,84,88,89,90,91,92,93,94,95,98,105,110,120,123,124,126,129,135,136,138,],[-6,-7,-41,-42,-43,-44,-45,-32,-33,-38,-39,-22,-28,-34,-35,-36,-37,-53,-54,-55,-40,-31,-27,123,-24,-30,-46,-49,-23,-26,-29,-25,]),'FI':([7,15,39,49,50,51,52,73,74,75,76,82,84,88,89,90,91,92,93,94,95,98,105,120,123,124,126,129,131,135,136,138,],[-6,-7,-41,-42,-43,-44,-45,-32,-33,-38,-39,-22,-28,-34,-35,-36,-37,-53,-54,-55,-40,-31,-27,-24,-30,-46,-49,-23,136,-26,-29,-25,]),'RARROW':([7,133,],[-6,137,]),'IDENTIFIER':([9,18,19,21,32,33,41,42,43,44,46,47,48,53,54,56,57,58,59,61,62,63,64,65,66,67,80,96,97,99,101,102,106,107,108,112,122,127,130,137,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'LPAREN':([14,15,33,39,41,42,43,44,46,47,48,54,56,57,58,61,62,63,64,65,66,67,80,86,96,97,99,106,107,112,121,122,130,137,],[19,-7,41,58,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,107,41,41,41,41,41,41,130,41,41,41,]),'COLON':([14,15,23,25,30,78,116,],[20,-7,29,31,36,20,128,]),'IF':([33,41,42,43,44,46,47,48,54,56,57,58,61,62,63,64,65,66,67,80,96,97,99,106,107,112,122,130,137,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'WHILE':([33,41,42,43,44,46,47,48,54,56,57,58,61,62,63,64,65,66,67,80,96,97,99,106,107,112,122,130,137,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'NEW':([33,41,42,43,44,46,47,48,54,56,57,58,61,62,63,64,65,66,67,80,96,97,99,106,107,112,122,130,137,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'ISVOID':([33,41,42,43,44,46,47,48,54,56,57,58,61,62,63,64,65,66,67,80,96,97,99,106,107,112,122,130,137,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'NOT':([33,41,42,43,44,46,47,48,54,56,57,58,61,62,63,64,65,66,67,80,96,97,99,106,107,112,122,130,137,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'TILDE':([33,41,42,43,44,46,47,48,54,56,57,58,61,62,63,64,65,66,67,80,96,97,99,106,107,112,122,130,137,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'INTEGER':([33,41,42,43,44,46,47,48,54,56,57,58,61,62,63,64,65,66,67,80,96,97,99,106,107,112,122,130,137,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'STRING':([33,41,42,43,44,46,47,48,54,56,57,58,61,62,63,64,65,66,67,80,96,97,99,106,107,112,122,130,137,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'TRUE':([33,41,42,43,44,46,47,48,54,56,57,58,61,62,63,64,65,66,67,80,96,97,99,106,107,112,122,130,137,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'FALSE':([33,41,42,43,44,46,47,48,54,56,57,58,61,62,63,64,65,66,67,80,96,97,99,106,107,112,122,130,137,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'LET':([33,41,42,43,44,46,47,48,54,56,57,58,61,62,63,64,65,66,67,80,96,97,99,106,107,112,122,130,137,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'CASE':([33,41,42,43,44,46,47,48,54,56,57,58,61,62,63,64,65,66,67,80,96,97,99,106,107,112,122,130,137,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'ESAC':([114,127,132,],[126,-51,-52,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'classlist':([0,5,],[2,8,]),'class':([0,5,],[3,3,]),'type':([4,10,20,29,31,36,45,60,128,],[6,16,27,35,37,55,73,87,133,]),'featurelist':([9,18,21,],[11,22,28,]),'feature':([9,18,21,],[12,12,12,]),'attribute':([9,18,21,53,101,],[13,13,13,77,113,]),'identifier':([9,18,19,21,32,33,41,42,43,44,46,47,48,53,54,56,57,58,59,61,62,63,64,65,66,67,80,96,97,99,101,102,106,107,108,112,122,127,130,137,],[14,14,23,14,23,39,39,39,39,39,39,39,39,78,39,39,39,39,86,39,39,39,39,39,39,39,39,39,39,39,78,116,39,39,121,39,39,116,39,39,]),'formallist':([19,32,],[24,38,]),'formal':([19,32,],[26,26,]),'exp':([33,41,42,43,44,46,47,48,54,56,57,58,61,62,63,64,65,66,67,80,96,97,99,106,107,112,122,130,137,],[40,68,69,70,72,74,75,76,79,81,82,85,88,89,90,91,92,93,94,103,109,110,72,85,85,124,131,85,139,]),'explist_semi':([44,99,],[71,111,]),'explist_comma':([58,106,107,130,],[83,118,119,134,]),'attributelist':([77,113,],[100,125,]),'elementlist':([102,127,],[114,132,]),'element':([102,127,],[115,115,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> classlist','program',1,'p_program_classlist','main.py',78),
  ('classlist -> class SEMI','classlist',2,'p_classlist_one','main.py',82),
  ('classlist -> class SEMI classlist','classlist',3,'p_classlist_some','main.py',86),
  ('class -> CLASS type LBRACE featurelist RBRACE','class',5,'p_class_noinherit','main.py',90),
  ('class -> CLASS type INHERITS type LBRACE featurelist RBRACE','class',7,'p_class_inherit','main.py',94),
  ('type -> TYPE','type',1,'p_type','main.py',98),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','main.py',102),
  ('formallist -> formal COMMA formallist','formallist',3,'p_formallist_some','main.py',106),
  ('formallist -> formal','formallist',1,'p_formallist_one','main.py',110),
  ('formal -> identifier COLON type','formal',3,'p_formal','main.py',114),
  ('featurelist -> <empty>','featurelist',0,'p_featurelist_none','main.py',118),
  ('featurelist -> feature SEMI featurelist','featurelist',3,'p_featurelist_some','main.py',122),
  ('feature -> attribute','feature',1,'p_feature_attribute','main.py',126),
  ('attribute -> identifier COLON type','attribute',3,'p_attributenoinit','main.py',130),
  ('attribute -> identifier COLON type LARROW exp','attribute',5,'p_attributeinit','main.py',134),
  ('feature -> identifier LPAREN formallist RPAREN COLON type LBRACE exp RBRACE','feature',9,'p_feature_method_withformals','main.py',138),
  ('feature -> identifier LPAREN RPAREN COLON type LBRACE exp RBRACE','feature',8,'p_feature_method_noformals','main.py',142),
  ('explist_semi -> exp SEMI','explist_semi',2,'p_explist_semi_one','main.py',146),
  ('explist_semi -> exp SEMI explist_semi','explist_semi',3,'p_explist_semi_some','main.py',150),
  ('explist_comma -> exp','explist_comma',1,'p_explist_comma_one','main.py',154),
  ('explist_comma -> exp COMMA explist_comma','explist_comma',3,'p_explist_comma_some','main.py',158),
  ('exp -> identifier LARROW exp','exp',3,'p_exp_assign','main.py',162),
  ('exp -> exp DOT identifier LPAREN explist_comma RPAREN','exp',6,'p_exp_dynamicdispatch_withexp','main.py',166),
  ('exp -> exp DOT identifier LPAREN RPAREN','exp',5,'p_exp_dynamicdispatch_noexp','main.py',170),
  ('exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN','exp',8,'p_exp_staticdispatch_withexp','main.py',174),
  ('exp -> exp AT type DOT identifier LPAREN RPAREN','exp',7,'p_exp_staticdispatch_noexp','main.py',178),
  ('exp -> identifier LPAREN explist_comma RPAREN','exp',4,'p_exp_selfdispatch_withexp','main.py',182),
  ('exp -> identifier LPAREN RPAREN','exp',3,'p_exp_selfdispatch_noexp','main.py',186),
  ('exp -> IF exp THEN exp ELSE exp FI','exp',7,'p_exp_if','main.py',190),
  ('exp -> WHILE exp LOOP exp POOL','exp',5,'p_exp_while','main.py',194),
  ('exp -> LBRACE explist_semi RBRACE','exp',3,'p_exp_block','main.py',198),
  ('exp -> NEW type','exp',2,'p_exp_new','main.py',202),
  ('exp -> ISVOID exp','exp',2,'p_exp_isvoid','main.py',206),
  ('exp -> exp PLUS exp','exp',3,'p_exp_plus','main.py',210),
  ('exp -> exp MINUS exp','exp',3,'p_exp_minus','main.py',214),
  ('exp -> exp TIMES exp','exp',3,'p_exp_times','main.py',218),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_divide','main.py',222),
  ('exp -> NOT exp','exp',2,'p_exp_not','main.py',226),
  ('exp -> TILDE exp','exp',2,'p_exp_negate','main.py',230),
  ('exp -> LPAREN exp RPAREN','exp',3,'p_exp_parenexp','main.py',235),
  ('exp -> identifier','exp',1,'p_exp_identifier','main.py',239),
  ('exp -> INTEGER','exp',1,'p_exp_integer','main.py',243),
  ('exp -> STRING','exp',1,'p_exp_string','main.py',247),
  ('exp -> TRUE','exp',1,'p_exp_true','main.py',251),
  ('exp -> FALSE','exp',1,'p_exp_false','main.py',255),
  ('exp -> LET attribute attributelist IN exp','exp',5,'p_exp_let','main.py',259),
  ('attributelist -> <empty>','attributelist',0,'p_let_attributelist_none','main.py',263),
  ('attributelist -> COMMA attribute attributelist','attributelist',3,'p_let_attributelist_some','main.py',267),
  ('exp -> CASE exp OF elementlist ESAC','exp',5,'p_exp_case','main.py',271),
  ('element -> identifier COLON type RARROW exp','element',5,'p_case_element','main.py',275),
  ('elementlist -> element SEMI','elementlist',2,'p_case_elementlist_one','main.py',279),
  ('elementlist -> element SEMI elementlist','elementlist',3,'p_case_elementlist_some','main.py',283),
  ('exp -> exp LT exp','exp',3,'p_exp_lt','main.py',287),
  ('exp -> exp LE exp','exp',3,'p_exp_le','main.py',291),
  ('exp -> exp EQUALS exp','exp',3,'p_exp_eq','main.py',295),
]
